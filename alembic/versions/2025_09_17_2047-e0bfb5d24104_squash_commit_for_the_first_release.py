"""Squash commit for the first release

Revision ID: e0bfb5d24104
Revises:
Create Date: 2025-09-17 20:47:17.436558

"""

from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e0bfb5d24104"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "appliances",
        sa.Column("appliance_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("appliance_volt", sa.Float(), nullable=False),
        sa.Column(
            "appliance_load_type",
            sa.Enum("LIGHT", "HEAVY", "INDUCTION", name="applianceloadtype"),
            nullable=False,
        ),
        sa.Column(
            "created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("appliance_id", sa.Uuid(), nullable=False),
        sa.PrimaryKeyConstraint("appliance_id"),
    )
    op.create_table(
        "category",
        sa.Column(
            "created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("ctg_id", sa.Uuid(), nullable=False),
        sa.Column("ctg_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("ctg_id"),
    )
    op.create_table(
        "clients",
        sa.Column("client_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("client_phone", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("client_email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("client_id", sa.Uuid(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("client_id"),
    )
    op.create_table(
        "requirement",
        sa.Column("req_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("req_id", sa.Uuid(), nullable=False),
        sa.Column("req_kilo_watt", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("req_id"),
    )
    op.create_table(
        "clientconsumer",
        sa.Column("client_id", sa.Uuid(), nullable=False),
        sa.Column(
            "clinet_consumer_number", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "clinet_consumer_phone_number",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column(
            "clinet_consumer_nick_name",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column(
            "clinet_consumer_meter_type",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column("clinet_consumer_demand_load", sa.Integer(), nullable=False),
        sa.Column("clinet_consumed_demand_phase", sa.Integer(), nullable=False),
        sa.Column("client_consumer_max_consumed_units", sa.Integer(), nullable=True),
        sa.Column("client_consumer_avg_consumed_unit", sa.Integer(), nullable=True),
        sa.Column("client_consumer_peak_demand", sa.Integer(), nullable=True),
        sa.Column("client_consumer_avg_demand", sa.Integer(), nullable=True),
        sa.Column(
            "clinet_consumer_billing_type",
            sa.Enum("MONTHLY", "BI_MONTHLY", name="clientconsumerbillingtype"),
            nullable=False,
        ),
        sa.Column(
            "clinet_consumer_requirement",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column(
            "created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("ccm_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["client_id"], ["clients.client_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("ccm_id"),
    )
    op.create_index(
        op.f("ix_clientconsumer_client_id"),
        "clientconsumer",
        ["client_id"],
        unique=False,
    )
    op.create_table(
        "product",
        sa.Column(
            "created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("prd_id", sa.Uuid(), nullable=False),
        sa.Column("prod_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("prd_capacity", sa.Integer(), nullable=False),
        sa.Column("prd_price", sa.Float(), nullable=False),
        sa.Column("prd_gst", sa.Float(), nullable=False),
        sa.Column("ctg_id", sa.Uuid(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("show_prd_product", sa.Boolean(), nullable=False),
        sa.Column("show_prd_price", sa.Boolean(), nullable=False),
        sa.Column("show_prd_quantity", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ctg_id"],
            ["category.ctg_id"],
        ),
        sa.PrimaryKeyConstraint("prd_id"),
    )
    op.create_table(
        "consumer_requirement",
        sa.Column(
            "created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("con_req_id", sa.Uuid(), nullable=False),
        sa.Column("ccm_id", sa.Uuid(), nullable=False),
        sa.Column("creq_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "consumer_requirement_descriptin",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column(
            "proposed_recommandation",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["ccm_id"], ["clientconsumer.ccm_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("con_req_id"),
    )
    op.create_index(
        op.f("ix_consumer_requirement_ccm_id"),
        "consumer_requirement",
        ["ccm_id"],
        unique=False,
    )
    op.create_table(
        "consumerappliancesusage",
        sa.Column("appliance_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("appliance_watt", sa.Float(), nullable=False),
        sa.Column("appliance_quantity", sa.Integer(), nullable=False),
        sa.Column("appliance_day_usage", sa.Float(), nullable=False),
        sa.Column("appliance_night_usage", sa.Float(), nullable=False),
        sa.Column("exclude_for_calculation", sa.Boolean(), nullable=False),
        sa.Column("need_battery_backup", sa.Boolean(), nullable=False),
        sa.Column("ccm_id", sa.Uuid(), nullable=False),
        sa.Column(
            "created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("cau_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ccm_id"], ["clientconsumer.ccm_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("cau_id"),
    )
    op.create_index(
        op.f("ix_consumerappliancesusage_ccm_id"),
        "consumerappliancesusage",
        ["ccm_id"],
        unique=False,
    )
    op.create_table(
        "requirementproducts",
        sa.Column("req_id", sa.Uuid(), nullable=False),
        sa.Column("prod_id", sa.Uuid(), nullable=False),
        sa.Column("prod_quantity", sa.Integer(), nullable=False),
        sa.Column(
            "created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("prd_req_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["prod_id"],
            ["product.prd_id"],
        ),
        sa.ForeignKeyConstraint(["req_id"], ["requirement.req_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("prd_req_id"),
        sa.UniqueConstraint("req_id", "prod_id", name="uq_req_prod"),
    )
    op.create_table(
        "consumer_requirement_products",
        sa.Column(
            "created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_on", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("conrp_id", sa.Uuid(), nullable=False),
        sa.Column("con_req_id", sa.Uuid(), nullable=False),
        sa.Column("prd_id", sa.Uuid(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["con_req_id"], ["consumer_requirement.con_req_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["prd_id"], ["product.prd_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("conrp_id"),
        sa.UniqueConstraint("con_req_id", "prd_id", name="uq_con_req_prd"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("consumer_requirement_products")
    op.drop_table("requirementproducts")
    op.drop_index(
        op.f("ix_consumerappliancesusage_ccm_id"), table_name="consumerappliancesusage"
    )
    op.drop_table("consumerappliancesusage")
    op.drop_index(
        op.f("ix_consumer_requirement_ccm_id"), table_name="consumer_requirement"
    )
    op.drop_table("consumer_requirement")
    op.drop_table("product")
    op.drop_index(op.f("ix_clientconsumer_client_id"), table_name="clientconsumer")
    op.drop_table("clientconsumer")
    op.drop_table("requirement")
    op.drop_table("clients")
    op.drop_table("category")
    op.drop_table("appliances")
    # ### end Alembic commands ###
